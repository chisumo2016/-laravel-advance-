openapi: 3.0.3
info:
  title: Blogpost
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://laravel-advance.test'
paths:
  /api/v1/test/comments:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      body: []
                      user_id: 4
                      post_id: 93
                      created_at: '2022-07-10 18:03:47'
                      updated_at: '2022-07-10 18:03:47'
                    -
                      id: 2
                      body: []
                      user_id: 3
                      post_id: 197
                      created_at: '2022-07-10 18:03:47'
                      updated_at: '2022-07-10 18:03:47'
                    -
                      id: 3
                      body: []
                      user_id: 1
                      post_id: 122
                      created_at: '2022-07-10 18:03:47'
                      updated_at: '2022-07-10 18:03:47'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        body: []
                        user_id: 4
                        post_id: 93
                        created_at: '2022-07-10 18:03:47'
                        updated_at: '2022-07-10 18:03:47'
                      -
                        id: 2
                        body: []
                        user_id: 3
                        post_id: 197
                        created_at: '2022-07-10 18:03:47'
                        updated_at: '2022-07-10 18:03:47'
                      -
                        id: 3
                        body: []
                        user_id: 1
                        post_id: 122
                        created_at: '2022-07-10 18:03:47'
                        updated_at: '2022-07-10 18:03:47'
                    items:
                      type: object
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/test/comments/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    body: []
                    user_id: 4
                    post_id: 93
                    created_at: '2022-07-10 18:03:47'
                    updated_at: '2022-07-10 18:03:47'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      body: []
                      user_id: 4
                      post_id: 93
                      created_at: '2022-07-10 18:03:47'
                      updated_at: '2022-07-10 18:03:47'
      tags:
        - Endpoints
      security: []
    patch:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 1
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/test/posts:
    get:
      summary: 'Display a listing of the posts.'
      description: 'Gets a list of posts.'
      parameters:
        -
          in: query
          name: page_size
          description: 'Size per page. Defaults to 20.'
          example: 20
          required: false
          schema:
            type: integer
            description: 'Size per page. Defaults to 20.'
            example: 20
        -
          in: query
          name: page
          description: 'Page to view.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page to view.'
            example: 1
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 210
                      title: dolor
                      body: []
                      created_at: '2022-07-11T08:26:22.000000Z'
                      updated_at: '2022-07-11T08:26:22.000000Z'
                    -
                      id: 211
                      title: porro
                      body: []
                      created_at: '2022-07-11T08:26:22.000000Z'
                      updated_at: '2022-07-11T08:26:22.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 210
                        title: dolor
                        body: []
                        created_at: '2022-07-11T08:26:22.000000Z'
                        updated_at: '2022-07-11T08:26:22.000000Z'
                      -
                        id: 211
                        title: porro
                        body: []
                        created_at: '2022-07-11T08:26:22.000000Z'
                        updated_at: '2022-07-11T08:26:22.000000Z'
                    items:
                      type: object
      tags:
        - 'Post Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 213
                    title: exercitationem
                    body: []
                    created_at: '2022-07-11T08:26:22.000000Z'
                    updated_at: '2022-07-11T08:26:22.000000Z'
                properties:
                  data:
                    type: object
                    example:
                      id: 213
                      title: exercitationem
                      body: []
                      created_at: '2022-07-11T08:26:22.000000Z'
                      updated_at: '2022-07-11T08:26:22.000000Z'
      tags:
        - 'Post Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Title of the post.'
                  example: 'Tourism Post'
                body:
                  type: array
                  description: 'Body of the post.'
                  example:
                    - 'This post is  for tourism'
                  items:
                    type: string
                user_ids:
                  type: array
                  description: 'The author ids of the post.'
                  example:
                    - 1
                    - 2
                  items:
                    type: integer
              required:
                - title
                - body
                - user_ids
      security: []
  '/api/v1/test/posts/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 212
                    title: aut
                    body: []
                    created_at: '2022-07-11T08:26:22.000000Z'
                    updated_at: '2022-07-11T08:26:22.000000Z'
                properties:
                  data:
                    type: object
                    example:
                      id: 212
                      title: aut
                      body: []
                      created_at: '2022-07-11T08:26:22.000000Z'
                      updated_at: '2022-07-11T08:26:22.000000Z'
      tags:
        - 'Post Management'
      security: []
    patch:
      summary: 'Update the specified post in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 214
                    title: rerum
                    body: []
                    created_at: '2022-07-11T08:26:22.000000Z'
                    updated_at: '2022-07-11T08:26:22.000000Z'
                properties:
                  data:
                    type: object
                    example:
                      id: 214
                      title: rerum
                      body: []
                      created_at: '2022-07-11T08:26:22.000000Z'
                      updated_at: '2022-07-11T08:26:22.000000Z'
      tags:
        - 'Post Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Title of the post.'
                  example: 'Amazing Post'
                body:
                  type: array
                  description: 'Body of the post.'
                  example:
                    - 'This post is super beautiful'
                  items:
                    type: string
                user_ids:
                  type: array
                  description: 'The author ids of the post.'
                  example:
                    - 1
                    - 2
                  items:
                    type: integer
              required:
                - title
                - body
                - user_ids
      security: []
    delete:
      summary: 'Remove the specified post from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: success
                properties:
                  data:
                    type: string
                    example: success
      tags:
        - 'Post Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/test/users:
    get:
      summary: 'Display a listing of users.'
      description: 'Gets a list of users.'
      parameters:
        -
          in: query
          name: page_size
          description: 'Size per page. Defaults to 20.'
          example: 20
          required: false
          schema:
            type: integer
            description: 'Size per page. Defaults to 20.'
            example: 20
        -
          in: query
          name: page
          description: 'Page to view.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page to view.'
            example: 1
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      name: 'Flossie Romaguera'
                      email: hilario31@example.com
                      password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                      created_at: '2022-07-11T08:26:21.000000Z'
                      updated_at: '2022-07-11T08:26:21.000000Z'
                    -
                      name: 'Queenie Kshlerin'
                      email: rylan.schinner@example.org
                      password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                      created_at: '2022-07-11T08:26:21.000000Z'
                      updated_at: '2022-07-11T08:26:21.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        name: 'Flossie Romaguera'
                        email: hilario31@example.com
                        password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                        created_at: '2022-07-11T08:26:21.000000Z'
                        updated_at: '2022-07-11T08:26:21.000000Z'
                      -
                        name: 'Queenie Kshlerin'
                        email: rylan.schinner@example.org
                        password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                        created_at: '2022-07-11T08:26:21.000000Z'
                        updated_at: '2022-07-11T08:26:21.000000Z'
                    items:
                      type: object
      tags:
        - 'User Management'
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    name: 'Cornelius Schumm'
                    email: boyer.burdette@example.org
                    password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                    created_at: '2022-07-11T08:26:21.000000Z'
                    updated_at: '2022-07-11T08:26:21.000000Z'
                properties:
                  data:
                    type: object
                    example:
                      name: 'Cornelius Schumm'
                      email: boyer.burdette@example.org
                      password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                      created_at: '2022-07-11T08:26:21.000000Z'
                      updated_at: '2022-07-11T08:26:21.000000Z'
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'Email of the user.'
                  example: doe@doe.com
              required:
                - name
                - email
      security: []
  '/api/v1/test/users/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    name: 'Mrs. Nakia Bednar III'
                    email: schuppe.franz@example.org
                    password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                    created_at: '2022-07-11T08:26:21.000000Z'
                    updated_at: '2022-07-11T08:26:21.000000Z'
                properties:
                  data:
                    type: object
                    example:
                      name: 'Mrs. Nakia Bednar III'
                      email: schuppe.franz@example.org
                      password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                      created_at: '2022-07-11T08:26:21.000000Z'
                      updated_at: '2022-07-11T08:26:21.000000Z'
      tags:
        - 'User Management'
      security: []
    patch:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    name: 'Lamar Harvey'
                    email: christian.sanford@example.org
                    password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                    created_at: '2022-07-11T08:26:22.000000Z'
                    updated_at: '2022-07-11T08:26:22.000000Z'
                properties:
                  data:
                    type: object
                    example:
                      name: 'Lamar Harvey'
                      email: christian.sanford@example.org
                      password: $2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
                      created_at: '2022-07-11T08:26:22.000000Z'
                      updated_at: '2022-07-11T08:26:22.000000Z'
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'Email of the user.'
                  example: doe@doe.com
              required:
                - name
                - email
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: "@response 200 {\n\"data\": \"success\"\n}"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'User Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'User ID'
        example: 6
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'Post Management'
    description: "\nAPIs to manage the post resource."
  -
    name: 'User Management'
    description: "\nAPIs to manage the user resource."
